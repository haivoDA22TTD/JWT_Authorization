name: CI with SonarQube and MySQL

on:
  push:
    branches: main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: jwt
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
        ports:
          - 3306:3306

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 -uroot -prootpassword --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting ($i)..."
            sleep 2
          done

      - name: Verify MySQL connection
        run: |
          mysql -h127.0.0.1 -uroot -prootpassword -e "SHOW DATABASES;"

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and Test with Maven
        run: mvn -f jwt/pom.xml clean verify

      - name: Show test logs on failure
        if: failure()
        run: |
          echo "===== Listing surefire reports ====="
          ls -la jwt/target/surefire-reports || echo "No reports directory found"
          echo "===== Test log output ====="
          cat jwt/target/surefire-reports/*.txt || echo "No test logs found."

      - name: Upload test reports (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: jwt/target/surefire-reports

      - name: Run SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -f jwt/pom.xml org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.projectKey=haivoda22ttd_vo-chi-hai \
          -Dsonar.organization=haivoda22ttd \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.branch.name=main
